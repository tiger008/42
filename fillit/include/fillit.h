/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   fillit.h                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: tperraut <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2015/11/29 00:44:10 by tperraut          #+#    #+#             */
/*   Updated: 2015/11/29 04:47:34 by tperraut         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef FILLIT_H
# define FILLIT_H
# define BUF_SIZE 20
# define ERR -1
# define MAX_TRIO 26
# define I {-30584, 4369, 8738, 17476}
# define I_h {-4096, 15, 240, 3840}
# define J {-14208, 802, 1604, 3208, 12832, 25664}
# define J_i {275, 550, 1100, 4400, 8800, 17600}
# define J_rg {-29184, 71, 142, 1136, 2272, 18176}
# define J_rd {-7680, 113, 226, 1808, 3616, 28928}
# define L {785, 12560, 1570, 25120, 3140, -15296}
# define L_i {-30528, 547, 1094, 2188, 8752, 17504}
# define L_rg {-6144, 116, 232, 1856, 3712, 29696}
# define L_rd {23, 46, 368, 736, 5888, 11776}
# define S {54, 108, 864, 1728, 13824, 27648}
# define S_r {-29632, 561, 1122, 2244, 8976, 17952}
# define Z {-14848, 99, 198, 1584, 3168, 25344}
# define Z_r {306, 612, 1224, 4896, 9792, 19584}
# define T {39, 78, 1248, 624, 9984, 19968}
# define T_i {-7168, 114, 228, 1824, 3648, 29184}
# define T_rd {-29568, 562, 1124, 2248, 8992, 17984}
# define T_rg {305, 610, 1220, 4880, 9760, 19520}
# define O {-13312, 51, 102, 204, 816, 1632, 3264, 13056, 26112}

typedef struct	s_pt
{
	short	x;
	short	y;
}				t_pt;
typedef struct	s_trio
{
	t_pt	t[3];
}				t_trio;
short	parser(int fd, t_trio **tr);
short	ft_search(short val, short *t, short size);
short	ft_trio(short *x);

#endif
